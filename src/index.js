/**
 * Alertmanager API
 * API of the Prometheus Alertmanager (https://github.com/prometheus/alertmanager)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Alert from './model/Alert';
import AlertGroup from './model/AlertGroup';
import AlertStatus from './model/AlertStatus';
import AlertmanagerConfig from './model/AlertmanagerConfig';
import AlertmanagerStatus from './model/AlertmanagerStatus';
import ClusterStatus from './model/ClusterStatus';
import GettableAlert from './model/GettableAlert';
import GettableAlertAllOf from './model/GettableAlertAllOf';
import GettableSilence from './model/GettableSilence';
import GettableSilenceAllOf from './model/GettableSilenceAllOf';
import InlineResponse200 from './model/InlineResponse200';
import Matcher from './model/Matcher';
import PeerStatus from './model/PeerStatus';
import PostableAlert from './model/PostableAlert';
import PostableAlertAllOf from './model/PostableAlertAllOf';
import PostableSilence from './model/PostableSilence';
import PostableSilenceAllOf from './model/PostableSilenceAllOf';
import Receiver from './model/Receiver';
import Silence from './model/Silence';
import SilenceStatus from './model/SilenceStatus';
import VersionInfo from './model/VersionInfo';
import AlertApi from './api/AlertApi';
import AlertgroupApi from './api/AlertgroupApi';
import GeneralApi from './api/GeneralApi';
import ReceiverApi from './api/ReceiverApi';
import SilenceApi from './api/SilenceApi';


/**
* API_of_the_Prometheus_Alertmanager__https__github_com_prometheus_alertmanager.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AlertmanagerApi = require('index'); // See note below*.
* var xxxSvc = new AlertmanagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AlertmanagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AlertmanagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AlertmanagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Alert model constructor.
     * @property {module:model/Alert}
     */
    Alert,

    /**
     * The AlertGroup model constructor.
     * @property {module:model/AlertGroup}
     */
    AlertGroup,

    /**
     * The AlertStatus model constructor.
     * @property {module:model/AlertStatus}
     */
    AlertStatus,

    /**
     * The AlertmanagerConfig model constructor.
     * @property {module:model/AlertmanagerConfig}
     */
    AlertmanagerConfig,

    /**
     * The AlertmanagerStatus model constructor.
     * @property {module:model/AlertmanagerStatus}
     */
    AlertmanagerStatus,

    /**
     * The ClusterStatus model constructor.
     * @property {module:model/ClusterStatus}
     */
    ClusterStatus,

    /**
     * The GettableAlert model constructor.
     * @property {module:model/GettableAlert}
     */
    GettableAlert,

    /**
     * The GettableAlertAllOf model constructor.
     * @property {module:model/GettableAlertAllOf}
     */
    GettableAlertAllOf,

    /**
     * The GettableSilence model constructor.
     * @property {module:model/GettableSilence}
     */
    GettableSilence,

    /**
     * The GettableSilenceAllOf model constructor.
     * @property {module:model/GettableSilenceAllOf}
     */
    GettableSilenceAllOf,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The Matcher model constructor.
     * @property {module:model/Matcher}
     */
    Matcher,

    /**
     * The PeerStatus model constructor.
     * @property {module:model/PeerStatus}
     */
    PeerStatus,

    /**
     * The PostableAlert model constructor.
     * @property {module:model/PostableAlert}
     */
    PostableAlert,

    /**
     * The PostableAlertAllOf model constructor.
     * @property {module:model/PostableAlertAllOf}
     */
    PostableAlertAllOf,

    /**
     * The PostableSilence model constructor.
     * @property {module:model/PostableSilence}
     */
    PostableSilence,

    /**
     * The PostableSilenceAllOf model constructor.
     * @property {module:model/PostableSilenceAllOf}
     */
    PostableSilenceAllOf,

    /**
     * The Receiver model constructor.
     * @property {module:model/Receiver}
     */
    Receiver,

    /**
     * The Silence model constructor.
     * @property {module:model/Silence}
     */
    Silence,

    /**
     * The SilenceStatus model constructor.
     * @property {module:model/SilenceStatus}
     */
    SilenceStatus,

    /**
     * The VersionInfo model constructor.
     * @property {module:model/VersionInfo}
     */
    VersionInfo,

    /**
    * The AlertApi service constructor.
    * @property {module:api/AlertApi}
    */
    AlertApi,

    /**
    * The AlertgroupApi service constructor.
    * @property {module:api/AlertgroupApi}
    */
    AlertgroupApi,

    /**
    * The GeneralApi service constructor.
    * @property {module:api/GeneralApi}
    */
    GeneralApi,

    /**
    * The ReceiverApi service constructor.
    * @property {module:api/ReceiverApi}
    */
    ReceiverApi,

    /**
    * The SilenceApi service constructor.
    * @property {module:api/SilenceApi}
    */
    SilenceApi
};
